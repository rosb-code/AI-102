using System;
using System.Net.Http;
using System.Threading.Tasks;
using Azure;
using Azure.AI.OpenAI;
using HtmlAgilityPack;

class Program
{
    private static readonly string endpoint = "<seu-endpoint>";
    private static readonly string apiKey = "<sua-chave-de-api>";

    static async Task Main(string[] args)
    {
        var url = "https://example.com/artigo-tecnico"; // URL da página web
        var htmlContent = await GetHtmlContentAsync(url);
        var textContent = ExtractTextFromHtml(htmlContent);

        var translatedText = await TranslateTextAsync(textContent, "en"); // Traduzir para inglês

        Console.WriteLine("Texto Original:");
        Console.WriteLine(textContent);
        Console.WriteLine("\nTexto Traduzido:");
        Console.WriteLine(translatedText);
    }

    private static async Task<string> GetHtmlContentAsync(string url)
    {
        using var httpClient = new HttpClient();
        var response = await httpClient.GetStringAsync(url);
        return response;
    }

    private static string ExtractTextFromHtml(string html)
    {
        var htmlDoc = new HtmlDocument();
        htmlDoc.LoadHtml(html);
        return htmlDoc.DocumentNode.InnerText;
    }

    private static async Task<string> TranslateTextAsync(string text, string targetLanguage)
    {
        var client = new OpenAIClient(new Uri(endpoint), new AzureKeyCredential(apiKey));
        var chatClient = client.GetChatClient("gpt-35-turbo");

        var messages = new[]
        {
            new ChatMessage(ChatRole.System, "You are a translator."),
            new ChatMessage(ChatRole.User, $"Translate the following text to {targetLanguage}: {text}")
        };

        var response = await chatClient.GetChatCompletionsAsync(messages);
        var translatedText = response.Value.Choices[0].Message.Content;

        return translatedText;
    }
}
